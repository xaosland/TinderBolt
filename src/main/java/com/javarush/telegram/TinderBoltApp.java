package com.javarush.telegram;

import com.javarush.telegram.ChatGPTService;
import com.javarush.telegram.DialogMode;
import com.javarush.telegram.MultiSessionTelegramBot;
import com.javarush.telegram.UserInfo;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.objects.*;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import java.util.ArrayList;

public class TinderBoltApp extends MultiSessionTelegramBot {
    public static final String TELEGRAM_BOT_NAME = "TinderRushBot";
    public static final String TELEGRAM_BOT_TOKEN = "";
    public static final String OPEN_AI_TOKEN = "";
    private ChatGPTService chatGPTService = new ChatGPTService(OPEN_AI_TOKEN);

    public TinderBoltApp() {
        super(TELEGRAM_BOT_NAME, TELEGRAM_BOT_TOKEN);
    }

    private DialogMode currentMode = null;
    private ArrayList<String> list = new ArrayList<>();

    @Override
    public void onUpdateEventReceived(Update update) {
        String message = getMessageText();
        if (message.equals("/start")) {
            currentMode = DialogMode.MAIN;
            sendPhotoMessage("main");
            String text = loadMessage("main");
            sendTextMessage(text);

            showMainMenu("–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ üé™", "/start",
                    "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è ü§≥", "/profile",
                    "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ üßß, ", "/opener",
                    "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏  üß®, ", "/message",
                    "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•", "/date",
                    "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üëª", "/gpt");
            return;
        }
        if (message.equals("/gpt")) {
            currentMode = DialogMode.GPT;
            sendPhotoMessage("gpt");
            String text = loadMessage("gpt");
            sendTextMessage(text);
            return;
        }
        if (currentMode == DialogMode.GPT) {
            String prompt = loadPrompt("gpt");
            Message msg = sendTextMessage("–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Å–≤–∏–¥–∞–Ω–∏—é! chatGpt –¥—É–º–∞–µ—Ç...");
            String answer = chatGPTService.sendMessage(prompt, message);
            sendTextMessage(answer);
            return;
        }
        if (message.equals("/date")) {
            currentMode = DialogMode.DATE;
            sendPhotoMessage("date");
            String text = loadMessage("date");
            sendTextButtonsMessage(text,
                    "–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ", "date_grande",
                    "–ú–∞—Ä–≥–æ –†–æ–±–±–∏", "date_robbie",
                    "–ó–µ–Ω–¥–µ—è", "date_zendaya",
                    "–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥", "date_gosling",
                    "–¢–æ–º –•–∞—Ä–¥–∏", "date_hardy");
            return;
        }
        if (currentMode == DialogMode.DATE) {
            String query = getCallbackQueryButtonKey();
            if (query.startsWith("date_")) {
                sendPhotoMessage(query);
                sendTextMessage("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! \n –¢–≤–æ—è –∑–∞–¥–∞—á–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π!");
                String prompt = loadPrompt(query);
                chatGPTService.setPrompt(prompt);
                return;
            }
            Message msg = sendTextMessage("–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Å–≤–∏–¥–∞–Ω–∏—é! chatGpt –¥—É–º–∞–µ—Ç...");
            String answer = chatGPTService.addMessage(message);
            sendTextMessage(answer);
            return;
        }
        if (message.equals("/message")) {
            currentMode = DialogMode.MESSAGE;
            sendPhotoMessage("message");
            sendTextButtonsMessage("–ü—Ä–∏—à–ª–∏—Ç–µ –≤ —á–∞—Ç –≤–∞—à—É –ø–µ—Ä–µ–ø–∏—Å–∫—É",
                    "–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", "message_next",
                    "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ", "message_date");
            return;
        }
        if (currentMode == DialogMode.MESSAGE) {
            String query = getCallbackQueryButtonKey();
            if (query.startsWith("message_")) {
                String prompt = loadPrompt(query);
                String userChatHistory = String.join("\n\n", list);
                Message msg = sendTextMessage("–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Å–≤–∏–¥–∞–Ω–∏—é! chatGpt –¥—É–º–∞–µ—Ç...");
                String answer = chatGPTService.sendMessage(prompt, userChatHistory);
                sendTextMessage(answer);
            }

            list.add(message);
            return;
        }

        sendTextMessage("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å! ü•∞");
        sendTextMessage("–í—ã –≥–æ—Ç–æ–≤—ã —É–∑–Ω–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ? ");
        sendTextMessage("–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ " + message + " ?");
        sendTextButtonsMessage("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:", "–°—Ç–∞—Ä—Ç", "/start", "–°—Ç–æ–ø", "/stop");

    }

    public static void main(String[] args) throws TelegramApiException {
        TelegramBotsApi telegramBotsApi = new TelegramBotsApi(DefaultBotSession.class);
        telegramBotsApi.registerBot(new TinderBoltApp());
    }
}